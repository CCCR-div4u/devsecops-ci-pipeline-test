name: CI/CD Pipeline for Spring Boot App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: devsecops-pipeline-test
      REGISTRY: docker.io
      IMAGE_TAG: ${{ github.sha }} 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      id: setup-java
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build with Maven
      run: ./mvnw package -DskipTests

    - name: Run OWASP Dependency-Check SCA Scan
      uses: dependency-check/Dependency-Check_Action@main
      id: depcheck
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.distribution-path }}
      with:
        project: 'devsecops-pipeline-test'
        path: '.'
        format: 'HTML,JSON'
        # threshold: 'CRITICAL,HIGH'
        # failBuildOnCVSS: '7'

    - name: Upload Dependency-Check Scan Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: owasp-dependency-check-report
        path: ${{ github.workspace }}/dependency-check-report/

    # SCA 스캔 결과에 따라 빌드 실패 처리 (선택 사항)
    # - name: Fail CI if SCA vulnerabilities found
    #   if: steps.depcheck.outputs.exitCode != 0
    #   run: |
    #     echo "OWASP Dependency-Check found vulnerabilities. Failing pipeline."
    #     exit 1    

    - name: Log in to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

    - name: Push Docker image
      run: |
        docker push ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
