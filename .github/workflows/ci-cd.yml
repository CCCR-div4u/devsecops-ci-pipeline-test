name: CI/CD Pipeline for Spring Boot App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: devsecops-pipeline-test
      REGISTRY: docker.io
      IMAGE_TAG: ${{ github.sha }} 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build with Maven
      run: ./mvnw package -DskipTests

    - name: Run OWASP Dependency-Check SCA Scan
      uses: dependency-check/Dependency-Check_Action@main
      id: Depcheck
      env:
        JAVA_HOME: /opt/jdk
      with:
        project: 'devsecops-pipeline-test'
        path: '.'
        format: 'HTML'

    - name: Upload Dependency-Check Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: owasp-dependency-check-report
        path: ${{ github.workspace }}/reports

    - name: Log in to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build Docker image
      id: build_image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
        echo "image_full_name=${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

    - name: Run Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      id: trivy_scan
      with:
        image-ref: "${{ steps.build_image.outputs.image_full_name }}"
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy Scan Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-scan-report
        path: trivy-scan-report.json

    - name: Push Docker image
      if: success()
      run: |
        docker push ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
